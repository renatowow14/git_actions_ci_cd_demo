# Opcional - O name do fluxo de trabalho como aparecerá na guia "Ações" do repositório GitHub
name: CI/CD Example

# Exibir o nome de usuário do ator que acionou a execução do fluxo de trabalho. 
run-name: ${{ github.actor }} is running pipeline on GitHub Actions

# Controla quando o fluxo de trabalho será executado
on:
  # Aciona o fluxo de trabalho em eventos push ou pull request, mas apenas para a branch "main"
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

  # Permite que você execute este fluxo de trabalho manualmente na guia Actions.
  workflow_dispatch:

# Uma execução de fluxo de trabalho é composta por um ou mais trabalhos que podem ser executados sequencialmente ou em paralelo.
jobs:
  # Este fluxo de trabalho contém dois fluxos de trabalho chamado "matrix_testing e ci_cd"
  matrix_testing:

    # Faz o uso de varias versoes do nodejs e de sistemas operacionais diferentes
    name: Test on node ${{ matrix.node_version }} and ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        node_version: ['16', '17', '>=18']
        os: [ubuntu-latest, windows-latest, macOS-latest]

    # Para cada um faz o checkout e seta a versao do node deseajda
    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node_version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node_version }}

    # Instala as dependencias, faz o build e roda o teste de cada um.
    - name: npm install, build and test
      run: |
        npm install
        npm npm run build:prod --if-present
        npm run test:headless

  ci_cd:
    needs: matrix_testing
    # O tipo de runner no qual o trabalho será executado
    runs-on: ubuntu-latest

    # As etapas representam uma sequência de tarefas que serão executadas como parte do trabalho
    steps:
      # Configura as credenciais de acesso ao bucket da AWS S3
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION_NAME }}

      # Verifica seu repositório no runner
      - name: Checkout Repository
        uses: actions/checkout@v3

        # Define a versao do node como 16x
      - name: Define Node.js Version
        uses: actions/setup-node@v3
        with:
          node-version: "16.x"

        # Instala as dependencias do projeto
      - name: Install dependencies
        run: npm install

        # Faz o teste da Aplicacao
      - name: Run tests
        run: npm run test:headless

        # Faz o Build da Aplicacao
      - name: Build Application
        run: npm run build:prod --if-present

        # Se tiver tido sucesso, faz o deploy da app no AWS S3
      - name: Deploy Application on AWS S3 Bucket
        if: success()
        run: aws s3 sync ./dist/angular-github-actions-amazon-s3 s3://angular-github-actions-amazon-s3-demo

        # Faz upload do artefato gerado durante o build
      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v3
        with:
          name: node-app-dist
          path: ./dist/angular-github-actions-amazon-s3
